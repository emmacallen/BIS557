library(testthat)
library(glmnet)

context("Test the output of cv_ridge_regression().")

test_that("Your cross_validation() function finds the same lambda.min with the same inputs in an easy case.", {

  data(iris)

  fit_cv_glmnet <- cv.glmnet(model.matrix(Sepal.Length ~ . , iris), as.matrix(iris[,1]), alpha = 0)

  fit_cv_ridge_regression <- cross_validation(Sepal.Length ~ ., iris, lambdas = fit_cv_glmnet$lambda)

  expect_equivalent(fit_cv_glmnet$lambda.min, fit_cv_ridge_regression$lambda_min,
                    tolerance = 1e-2)
})

test_that("Your cross_validation() function works with contrasts.", {

  data(iris)

  fit_cv_glmnet <- cv.glmnet(model.matrix(Sepal.Length ~ ., iris,
                                          contrasts.arg = list(Species = "contr.sum")),
                             as.matrix(iris[,1]), alpha = 0)

  fit_cv_ridge_regression <- cross_validation(Sepal.Length ~ ., iris, lambdas = fit_cv_glmnet$lambda, contrasts = list(Species = "contr.sum"))

  expect_equivalent(fit_cv_glmnet$lambda.min, fit_cv_ridge_regression$lambda_min,
                    tolerance = 1e-2)

})
